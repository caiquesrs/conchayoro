name: conchayoro-pipeline
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: frontend install
        run: npm --prefix frontend install
      - name: frontend build
        run: npm --prefix frontend run build
      - name: upload frontend build
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: frontend/.next/server/app
  deploy-homolog:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        bucket: [homolog-bucket]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: frontend/.next/server/app
      - name: Deploy to Homolog
        run: aws s3 cp frontend/.next/server/app s3://$BUCKET_S3 --recursive --acl public-read
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_EC2_METADATA_DISABLED: true
          BUCKET_S3: ${{ matrix.bucket }}
  deploy-production:
    if: contains(github.event.head_commit.message, 'podecommitar')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: frontend/.next/server/app
      - name: Deploy to Production
        run: aws s3 cp frontend/.next/server/app s3://production-bucket --recursive --acl public-read
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_EC2_METADATA_DISABLED: true
  deploy-production-manual:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Manual Approval
        uses: gh-actions/approval@v2
        with:
          message: "Approve deployment to production"
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: frontend/.next/server/app
      - name: Deploy to Production
        run: aws s3 cp frontend/.next/server/app s3://production-bucket --recursive --acl public-read
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_EC2_METADATA_DISABLED: true
